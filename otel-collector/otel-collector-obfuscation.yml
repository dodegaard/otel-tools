---
extensions:
  health_check:
    endpoint: 0.0.0.0:13133
  http_forwarder:
    egress:
      endpoint: "{insertendpointurl}"
  memory_ballast:
    # In general, the ballast should be set to 1/3 of the collector's memory, the limit
    # should be 90% of the collector's memory.
    # The simplest way to specify the ballast size is set the value of SPLUNK_BALLAST_SIZE_MIB env variable.
    size_mib: 100.0

receivers:
  otlp:
    protocols:
      grpc:
      http:
  prometheus/internal:
    config:
      scrape_configs:
      - job_name: 'otel-collector'
        scrape_interval: 10s
        static_configs:
        - targets: ['0.0.0.0:8888']
        metric_relabel_configs:
          - source_labels: [ __name__ ]
            regex: '.*grpc_io.*'
            action: drop
  smartagent/signalfx-forwarder:
    type: signalfx-forwarder
    listenAddress: 0.0.0.0:9080

processors:
  batch:
  # Enabling the memory_limiter is strongly recommended for every pipeline.
  # Configuration is based on the amount of memory allocated to the collector.
  # For more information about memory limiter, see
  # https://github.com/open-telemetry/opentelemetry-collector/blob/main/processor/memorylimiter/README.md
  memory_limiter:
    check_interval: 2s
    limit_mib: 300
  span/wcf_cardinality_redux:
    name:
      to_attributes:
        rules:
          - ^wcf.request \/route\/customerHistory\/(?P<tokenCustomerHistoryId>.*)$
          - ^wcf.request \/route\/customer\/(?P<tokenCustomerId>.*)$
          - ^wcf.request \/route\/marketingMessage\/(?P<tokenMarketingMessagePageAndSize>.*)$
          - ^wcf.request \/route\/message\/(?P<tokenMessageIdOrAction>.*)$
          - ^wcf.request \/route\/transaction\/(?P<tokenTransactionIdOrType>.*)$
          - ^wcf.request \/route\/transactions\/pending\/(?P<tokenOnlyDual>.*)$
          - ^wcf.request \/route\/transactions\/(?P<tokenTransactionId>.*)\/(?P<tokenTransactionMode>.*)$
          - ^wcf.request \/route\/form\/(?P<tokenFormId>.*)\/(?P<tokenFormIdUniqueValue>.*)$
          - ^wcf.request \/route\/form\/(?P<tokenFormId>.*)$
          - ^wcf.request \/route\/transactionform\/(?P<tokenTransactionFormId>.*)$
          - ^wcf.request \/route\/process\/draft\/(?P<tokenProcessDraftType>.*)$
          - ^wcf.request \/route\/customerExport\/(?P<tokenCustomerExportDetail>.*)$
          - ^wcf.request \/route\/billpay\/(?P<tokenBillPayId>.*)\/(?P<tokenBillPayType>.*)$
          - ^wcf.request \/route\/customerHistoryDetail\/(?P<tokenCustomerHistoryDetailId>.*)\/(?P<tokenCustomerHistoryDetailTransactionId>.*)\/(?P<tokenCustomerHistoryDetailTransactionType>.*)$
          - ^wcf.request \/route\/customerHistoryImage\/(?P<tokenCustomerHistoryImageId>.*)\/(?P<tokenCustomerHistoryImageTransactionId>.*)\/(?P<tokenCustomerHistoryImageTransactionType>.*)$
          - ^wcf.request \/route\/push\/(?P<tokenPushId>.*)$

exporters:
  # Send to gateway
  otlp:
    endpoint: "{insertendpointurl}"
    tls:
      insecure: true
  # Debug
  logging:
    loglevel: debug

service:
  extensions: [health_check, http_forwarder, memory_ballast]
  pipelines:
    traces:
      receivers: [otlp, smartagent/signalfx-forwarder]
      processors:
      - memory_limiter
      - batch
      
      - span/wcf_cardinality_redux
      exporters: [otlp]
